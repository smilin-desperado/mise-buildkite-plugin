#!/usr/bin/env bash

set -eo pipefail

if [[ "${BUILDKITE_PLUGIN_MISE_DEBUG:-false}" =~ (true|on|1) ]]; then
	echo "~~~ :hammer: Enabling debug mode"
	set -x
fi

miseDir() {
	if [ -n "$MISE_DIR" ]; then
		echo "$MISE_DIR"
		return
	fi

	if [ -n "$MISE_DATA_DIR" ]; then
		echo "$MISE_DATA_DIR"
		return
	fi

	if [ -n "$XDG_DATA_HOME" ]; then
		echo "$XDG_DATA_HOME/mise"
		return
	fi

	echo "$HOME/.local/share/mise"
}

setupMise() {
	version="$1"
	miseBinDir=$(miseDir)/bin

	if [ -n "$version" ]; then
		url="https://mise.jdx.dev/v${version}/mise-v${version}-$(get_os)-$(get_arch)"
	else
		url="https://mise.jdx.dev/mise-latest-$(get_os)-$(get_arch)"
	fi

	mkdir -p "$miseBinDir"
	curl -fsSL "$url" -o "$miseBinDir/mise"
	chmod +x "$miseBinDir/mise"
	export PATH="$miseBinDir:$PATH"
}

get_os() {
	os="$(uname -s)"
	if [ "$os" = Darwin ]; then
		echo "macos"
	elif [ "$os" = Linux ]; then
		echo "linux"
	else
		error "unsupported OS: $os"
	fi
}

get_arch() {
	musl=""
	if type ldd >/dev/null 2>/dev/null; then
		libc=$(ldd /bin/ls | grep 'musl' | head -1 | cut -d ' ' -f1)
		if [ -n "$libc" ]; then
			musl="-musl"
		fi
	fi
	arch="$(uname -m)"
	if [ "$arch" = x86_64 ]; then
		echo "x64$musl"
	elif [ "$arch" = aarch64 ] || [ "$arch" = arm64 ]; then
		echo "arm64$musl"
	elif [ "$arch" = armv6l ]; then
		echo "armv6$musl"
	elif [ "$arch" = armv7l ]; then
		echo "armv7$musl"
	else
		error "unsupported architecture: $arch"
	fi
}

setToolVersions() {
	tool_versions="$1"
	if [ -n "$tool_versions" ]; then
		echo "$tool_versions" >.tool-versions
	fi
}

setMiseToml() {
	toml="$1"
	[ "$toml" ] && echo "$toml" >.mise.toml
}

testMise() {
	mise --version
}

miseInstall() {
	mise install
}

main() {
	setToolVersions "$BUILDKITE_PLUGIN_MISE_TOOL_VERSIONS"

    echo "dir: $(miseDir)"

    if ! command -v mise &>/dev/null; then
      echo "mise not found. Installing."
      setupMise "$BUILDKITE_PLUGIN_MISE_VERSION"
    fi

	# export MISE_TRUSTED_CONFIG_PATHS="$(pwd)"
	# export MISE_YES=1
	#export MISE_EXPERIMENTAL=$([ "$(getExperimental)" = true ] && echo 1 || echo 0)

	testMise
	#[ "$INSTALL" = true ] && miseInstall
}

main
